# This workflow makes sure that a pull request does not make any incompatible changes
# to the public API of Gson
# This setup tries to determine API incompatibility only for the changes introduced by the
# pull request. It does this by first checking out the 'old' version and installing it into
# the local Maven repository before then using japicmp to compare it to the current changes.
#
# Alternatively it would also be possible to compare against the last release version instead.
#
# Both approaches have their advantages and disadvantages, see description of
# https://github.com/google/gson/pull/2692 for details.
# Set dummy version
# Install artifacts with dummy version in local repository; used later by Maven plugin for comparison
# Run on workflow success (in that case differences report might include added methods and classes)
# or when API compatibility check failed
# Plugin should always have created report files (though they might be empty)

name: Modified Check API compatibility
jobs:
  check-api-compatibility:
    runs-on: ubuntu-latest
    steps:
    - name: Setup Python 3.10
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        pip install inotify
    - name: Run inotifywait
      run: |-
        python3 -c "
        import inotify.adapters
        import inotify.constants
        import os
        from datetime import datetime, timezone
        with open('/home/runner/inotifywait-log-check-api-compatibility.csv', 'w') as log_file:
          i = inotify.adapters.InotifyTree('/home/runner/work/gson/gson', inotify.constants.IN_CREATE | inotify.constants.IN_ACCESS)
          for event in i.event_gen(yield_nones=False):
            (_, type_names, path, filename) = event
            now = datetime.now(timezone.utc).strftime('%Y-%m-%dT%H:%M:%S.%f') + 'Z'
            events = ','.join(type_names)
            log_file.write(f'{now};{path};{filename};{events}\n')
            log_file.flush()
            os.fsync(log_file.fileno())
        " &
    - name: Check out old version
      uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938
      with:
        ref: ${{ github.event.pull_request.base.sha }}
        path: gson-old-japicmp
    - run: touch optcd-3.txt
    - name: Set up JDK 11
      uses: actions/setup-java@b36c23c0d998641eff861008f374ee103c25ac73
      with:
        distribution: temurin
        java-version: '11'
        cache: maven
    - run: touch optcd-4.txt
    - name: Build old version
      run: |-
        cd gson-old-japicmp
        # Set dummy version
        mvn --batch-mode --no-transfer-progress org.codehaus.mojo:versions-maven-plugin:2.16.2:set "-DnewVersion=0.0.0-JAPICMP-OLD"
        # Install artifacts with dummy version in local repository; used later by Maven plugin for comparison
        mvn --batch-mode --no-transfer-progress install -DskipTests
    - run: touch optcd-5.txt
    - name: Check out new version
      uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938
    - run: touch optcd-6.txt
    - name: Check API compatibility
      id: check-compatibility
      run: |-
        mvn --batch-mode --fail-at-end --no-transfer-progress package japicmp:cmp -DskipTests
    - run: touch optcd-7.txt
    - name: Upload API differences artifacts
      uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874
      with:
        name: api-differences
        path: |-
          **/japicmp/default-cli.html
          **/japicmp/default-cli.diff
        if-no-files-found: error
    - run: touch optcd-8.txt
    - name: Upload inotifywait logs
      uses: actions/upload-artifact@v4
      with:
        name: inotifywait-check-api-compatibility
        path: /home/runner/inotifywait-log-check-api-compatibility.csv
    name: check-api-compatibility
'on':
- push
- workflow_dispatch
